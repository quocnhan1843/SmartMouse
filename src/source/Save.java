/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package source;

import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Nguyen Quoc Nhan
 */
public class Save extends javax.swing.JFrame {

    /**
     * Creates new form Save
     */
    GraphicsDevice gd = GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice();
    int width = gd.getDisplayMode().getWidth();
    int height = gd.getDisplayMode().getHeight();
    private static Connection con;
 
    
    public Save() {
        initComponents();
        
        txtName.addKeyListener(new KeyListener() {

            @Override
            public void keyTyped(KeyEvent e) {
                lbThongBao.setText("");
                btSave.setEnabled(true);
            }

            @Override
            public void keyPressed(KeyEvent e) {
            }

            @Override
            public void keyReleased(KeyEvent e) {
            }
        });
    }
    
    public Save(int score, int level){
        initComponents();
        txtName.addKeyListener(new KeyListener() {

            @Override
            public void keyTyped(KeyEvent e) {
                lbThongBao.setText("");
                btSave.setEnabled(true);
            }

            @Override
            public void keyPressed(KeyEvent e) {
            }

            @Override
            public void keyReleased(KeyEvent e) {
            }
        });
        this.setBounds(this.width/2 - 832/2 , this.height/2 - 343/2, 832, 343);
        txtScore.setText(Integer.toString(score));
        txtLevel.setText(Integer.toString(level));
        
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://sql2.freemysqlhosting.net:3306/sql260237?user=sql260237&password=hP6!gE7!");
            //System.out.println("Ket noi OK");
        } catch (ClassNotFoundException ex) {
            //System.out.println("Không tìm thấy driver");
        } catch (SQLException ex) {
            //System.out.println("Không kết nối được cơ sở dữ liệu!");
        }        
        loadTopScore();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        txtScore = new javax.swing.JTextField();
        lbScore = new javax.swing.JLabel();
        txtLevel = new javax.swing.JTextField();
        lbLevel = new javax.swing.JLabel();
        btSave = new javax.swing.JButton();
        btQuit = new javax.swing.JButton();
        btLevel = new javax.swing.JButton();
        btScore = new javax.swing.JButton();
        lbThongBao = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        lbName.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        lbName.setForeground(new java.awt.Color(204, 51, 0));
        lbName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbName.setText("Name");

        txtName.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        txtName.setForeground(new java.awt.Color(204, 51, 0));

        table.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Rank", "Name", "Score", "Level"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setEnabled(false);
        jScrollPane1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setResizable(false);
            table.getColumnModel().getColumn(1).setResizable(false);
            table.getColumnModel().getColumn(2).setResizable(false);
            table.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel4.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 51, 0));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("SAVE");

        txtScore.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        txtScore.setForeground(new java.awt.Color(204, 51, 0));
        txtScore.setEnabled(false);

        lbScore.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        lbScore.setForeground(new java.awt.Color(204, 51, 0));
        lbScore.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbScore.setText("Score");

        txtLevel.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        txtLevel.setForeground(new java.awt.Color(204, 51, 0));
        txtLevel.setEnabled(false);

        lbLevel.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        lbLevel.setForeground(new java.awt.Color(204, 51, 0));
        lbLevel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbLevel.setText("Level");

        btSave.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        btSave.setForeground(new java.awt.Color(204, 51, 0));
        btSave.setText("Save");
        btSave.setEnabled(false);
        btSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSaveActionPerformed(evt);
            }
        });

        btQuit.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        btQuit.setForeground(new java.awt.Color(204, 51, 0));
        btQuit.setText("Close");
        btQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btQuitActionPerformed(evt);
            }
        });

        btLevel.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        btLevel.setForeground(new java.awt.Color(204, 51, 0));
        btLevel.setText("Level");
        btLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLevelActionPerformed(evt);
            }
        });

        btScore.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        btScore.setForeground(new java.awt.Color(204, 51, 0));
        btScore.setText("Score");
        btScore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btScoreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(171, 171, 171)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btSave, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btQuit, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbName, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbScore, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtScore, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(btScore, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbThongBao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jLabel4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addComponent(lbThongBao, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lbName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(41, 41, 41)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lbScore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtScore, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lbLevel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btSave)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btQuit, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btScore, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btQuitActionPerformed
        // TODO add your handling code here:
        Window.window.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btQuitActionPerformed

    private void btSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSaveActionPerformed
        // TODO add your handling code here:
        btSave.setEnabled(false);
        txtName.setEnabled(false);
        String name = txtName.getText();
        String score = txtScore.getText();
        String level = txtLevel.getText();
        try {
            Statement cmd = con.createStatement();
            String sql = "INSERT INTO  Information(Name ,Score,Level) VALUES ('" + name +"',  '" + score + "',  '" + level + "')"; 
            cmd.executeUpdate(sql);
        } catch (SQLException ex) {
        }
        loadTopScore();
    }//GEN-LAST:event_btSaveActionPerformed

    private void btScoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btScoreActionPerformed
        // TODO add your handling code here:
        loadTopScore();
    }//GEN-LAST:event_btScoreActionPerformed

    private void btLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLevelActionPerformed
        // TODO add your handling code here:
        loadTopLevel();
    }//GEN-LAST:event_btLevelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Save.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Save.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Save.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Save.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Save().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btLevel;
    private javax.swing.JButton btQuit;
    private javax.swing.JButton btSave;
    private javax.swing.JButton btScore;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbLevel;
    private javax.swing.JLabel lbName;
    private javax.swing.JLabel lbScore;
    private javax.swing.JLabel lbThongBao;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtLevel;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtScore;
    // End of variables declaration//GEN-END:variables

    private void loadTopScore() {
         try {
            Statement cmd = con.createStatement();
            String sql = "SELECT * FROM Information ORDER BY Score DESC,Level DESC,Name";
            ResultSet res = cmd.executeQuery(sql);
            String name = "";
            int score = 0;
            int level = 0;
            DefaultTableModel dtm = (DefaultTableModel) table.getModel();
            for(int r = dtm.getRowCount() - 1; r >=0; r--){
                dtm.removeRow(r);
            }
            int rank = 1;
            while(res.next()){
                Vector row = new Vector();
                name = res.getString(1);
                score = res.getInt(2);
                level = res.getInt(3);
                row.addElement(Integer.toString(rank++));
                row.addElement(name);
                row.addElement(Integer.toString(score));
                row.addElement(Integer.toString(level));
                dtm.addRow(row);
            }
            table.setModel(dtm);
        } catch (SQLException ex) {
        }
    }
    private void loadTopLevel() {
         try {
            Statement cmd = con.createStatement();
            String sql = "SELECT * FROM Information ORDER BY Level DESC,Score DESC,Name";
            ResultSet res = cmd.executeQuery(sql);
            String name = "";
            int score = 0;
            int level = 0;
            DefaultTableModel dtm = (DefaultTableModel) table.getModel();
            for(int r = dtm.getRowCount() - 1; r >=0; r--){
                dtm.removeRow(r);
            }
            int rank = 1;
            while(res.next()){
                Vector row = new Vector();
                name = res.getString(1);
                score = res.getInt(2);
                level = res.getInt(3);
                row.addElement(Integer.toString(rank++));
                row.addElement(name);
                row.addElement(Integer.toString(score));
                row.addElement(Integer.toString(level));
                dtm.addRow(row);
            }
            table.setModel(dtm);
        } catch (SQLException ex) {
        }
    }
}
